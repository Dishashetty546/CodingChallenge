# step 1: import all necessary dependencies

import numpy as np 
import pandas as pd
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score,confusion_matrix,classification_report

# step 2: load iris dataset

iris= load_iris()
X,y = iris.data, iris.target

# step 3: split the dataset into training and testing

X_train,X_test, y_train, y_test = train_test_split(X,y,test_size=0.2,random_state=42)

# step 4: normalize the feature

scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.fit_transform(X_test)

# step 5: initialize KNN CLASSIGIER = 3
knn = KNeighborsClassifier(n_neighbors=3)
knn.fit(X_train,y_train)

#for test data
y_pred = knn.predict(X_test)

# step 6: find accuracy b/w predicated and acctual test results

Accuracy = accuracy_score(y_test,y_pred)
print(Accuracy,"\n")

#confusion matrix
conf_matrix = confusion_matrix(y_test,y_pred)
print(conf_matrix,"\n")

#find final class report 
class_report = classification_report(y_test,y_pred)
print(class_report,"\n")


# KNN - is a simple ml algorithm, used to classify the data, 
#accuracy is finding the score based on predicted value and actual value of the result - proportion of correct prediction

#iris_dataset - is a flower family - consisting of 3 flowers setosa, versicolor, virginica

#number of neightbors =3

#confusion matrix - diagnal results shows correct prediction , off diagnal shows miss classifications

#classification report shows - prediction , recall and f1 score and support for each class

# k=3 is not related to 3 flower groups - its 3 nearest or closets training points to the test points

#standardScaler - lets say we are applyin knn or k nearest neightbors on a table having 3 rows age income and class, where age is b/w 20-30 nd income is b/w 23000-2249898 this makes income row dominating while calculating
# to avoid this we use standscaler - that make its mean value = 0 and sd = 1























































































































































































































































































































































































































































































































































































