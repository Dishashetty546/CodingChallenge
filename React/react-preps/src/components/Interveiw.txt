------------------------STEP 1---------------------------------------------------------------------------------------
Fundamentals - I
1. we as a user, ask any request, this request from UI/CLIENT/FRONTENDED ---THIS IS sent to API server/middleware -responsible for prossesing get post data frm database--this get updated in database server
   simply the complex frontend, due to its reusablity
2. key features- virtual DOM(documnet object model) used for respresenting HTML structures that lets js to interact with and manipulate the page elements, react use virtual dom, which is copy of browser dom in memory 
                 Diclarative syntax
                 community
                 component based architecture
                 resuablity and readable structures
                 community and ecosystem
                 react hooks
3.DOM - DOCUMENT object model allows our web page to represnt in a tree like structure,to dynamically access and manipulate the content, html is markup language, dom  plays memeory work
4.Virtual DOM - without dom our web page cant recat or interact with js
                real dom- any update in frontend we'll update real dom
                virtual dom - is designed only for react -  by facebook - to increase speed

                its a exact copy of real dom, if user makes any small change, it will not get updated each time
                this update is called as reconsilation

5. react components - react is a component based architecture 
                      building blocks of application
                      its a reuability
6. SPA (single page application) - ex: youtube , only content of that page is loading, but not the entire page
7. Advantages in React - component based application - more efficeinet, reusablity
                         open source library - free of cost, anyone can access
                         Ligth weight and very fast
                         large community behind react
                         most popular 
                         testing the ui is easy
8.Disadvantages in react - simple static web pages - only html,css is more than enough
9.role of jsx - simple to read and write
10. declarative and imperative syntax - 
    jsx - simple js blended with html - just by looking at code we can say the output, -- declarative 
    imperative - we follow all the steps

------------------------------------------------------------------------------------------------------------------------------------------
Fundamentals - II

11.arrow func in JS - way of declaring functions - consise way of declaring func 
12.how to setup react process
    *install node.js
    *install code editor
    *run command npx create-react-app file_name
    *run program by npm start or npm run dev
13. how app load and diplay components
    * first request goes to react server and finds index.html page
    *using react library load index.js 
    *index.js calls root component internally that is app.js
    *then app.js is replaced by index.js then index.js is replaced by index.html , then user will be rendered with speceific page
14. react                                             angular
   *using for SPA                                   SPA
   js library                                       complete ui/ux framework(inbuilt support)
   virtual dom(makes it faster)                     uses real dom
   smaller size,faster                              bigger in size not lightweight
   More lines of codes                              as a framework many of things are already built in less line codes
   simple to learn                                  diff to learn
15. 5 frameworks js- react, ANGULAR, VUE,ANGULAR.JS,BACKBONE.JS
16.library - we import the library in the beginning of code, then we use all the necesssary feature of it -EX:react 
   framework- need a specific pattern,its a complete package - ex: angular

17.reusability - all compoenents can be used to build another and composition- creating new big component using small components
18.state - its a current data of the method
   stateless - 
   state management - user performs some action. ui much render new data to the web page

19.props in JSX: way to transform data from parent component to child component

------------------------------------------------STEP 2----------------------------------------------------------------
FILES AND FOLDERS
19. NPM -node package manager- which will download all the dependencies, modules, needed for ui development  - node modules download
    at once, Node modules - react modules and all necesssary 
20. public folder- all the static folder - images, fonts - no dynamic things - no API fetching
21. SRC folder - source code - developed by developer - dynamic changes
22.


