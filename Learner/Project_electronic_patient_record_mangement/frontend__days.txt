FRONEND- Hospital Management System
 step 1:
npm create vite@latest ./
------vite(/is to create moderen web pages) ./  means current directory
-----npm install installs all the package.json, node_module directory necesaary to get start with node.js and react	
---- npm i axios react-icons react-multi-carousel react-router-dom react-toastify


axios: A promise-based HTTP client for making asynchronous HTTP requests in JavaScript.

react-icons: A library providing a set of customizable icons for React applications.

react-multi-carousel: A carousel component for React applications that supports multiple items per slide and various configurations.

react-router-dom: A routing library for React applications, enabling navigation and routing between different components and pages.

react-toastify: A notification library for React applications that provides customizable toast notifications to alert users of various actions or events.
-----npm run dev ( ro run )

delete all the unnecessary stuffs like index.js, assets folder, already preseent some deaflut codes,
----import app.css on app.jsx
jsx( javascript xml) used to write HTML code directly within js

---- state managemnet for  Authentication:   in web applications using state management typically involves storing authentication state (e.g., logged in or logged out) centrally (e.g., in Redux store or React context) to manage access control and provide secure access to protected resources.
adding wrapper on main.jsx---

using userstate----sending authorized data, userstate, 


step 2:
app.jsx
import some react-router-dom-:: browser router for router-----> its like a GPS navigator  it helps to take which path to reach destination
routes::----->re the defined paths or routes (URL paths) you want to take during your journey.
, route---->pecifies a specific path (URL path) in your application and determines what content (component) to display when a user visits that path.

take a folder named pages----add on the necessary pages accordingly
---add the path inside <route> in app.jsx file 
----and import all the files from pages into app.jsx

step 3:  creying pages ---aoutUs, appointmen, Home, login, Register,
---> import everthing on app.jsx-----> on the route
 
****HOME PAGE****
creating a home page----using rafce---u"ll get a boiler plate for the web page uisng react---> import react, on all pages it is must...create 4 components ----hero,biography, department, messageform
import all those on home.jsx

----> starting with hero section,,, on <hero title= , image=/>
---> on hero.jsx ----add a container--> banner -> title, p, image, span tag to coustomize particular image file
hhero.png got .animated_mage--> animation is move up nad down  1s infinite 	
on loop it transform from 0% to 100%

---> biogarphy----- design the about section ----> with <p> tag <imageurl>
--->department---->  use of react-multi-carousal----->go to site--->A carousel in web pages (often referred to as an image carousel or slider)--> we are not designing it entirly---> used ready made one ---> import statement of  2 lines from react-multi-carousl

- in department section----1. first we ceate an department array with const department () this indicates it doesnt take ant parameters
                                                  2. create a const named responsive for the carousal ---bsed on screen size how many pages it can display--- max of 3000 width to 2000 width it can display 4 images---> to make it responsive---it sets size depending on tablets, mobiles
                                                  3. returns --> container with header department --> carousal componnets--> it sets the size by extralarge, large, small-->  ecah department in card are given with name, image

-message section----> 
1.messageform in react is used to render user input---> state variables are irstName: Holds the value of the user's first name input.
lastName: Holds the value of the user's last name input.
email: Holds the value of the user's email input.
phone: Holds the value of the user's phone number input.
message: Holds the value of the user's message input.

2.handlemessage -- is used when form is submitted is a fuction----> which prevents defalut form submission, when user refreshes the page
3. this will return a container named this, with haeding form--> which calls another function(recursion)--> input for the registration foem --> like user inputs, firstname, email..->
onChange={(e) => setEmail(e.target.value)}: This event handler listens for changes to the input field. When the user types or modifies the content, onChange is triggered. The e parameter represents the event object. e.target.value retrieves the current value of the input field (in this case, the entered email address). setEmail(e.target.value)
 4.button css part n div

****Navbar******
1.importing usersate--for what? its a state maangement process used to---> if we are designing responsive website---> c0mponents that need to update their UI based on user interactions or other changes.
2.importing link component from raect-router dom--> ist work is to--> enables navigation within the application without reloading the whole page. It's used to create links (or anchors) that navigate to different routes defined in the application.

3.const func---> where userstete is whether menu is open or not --> true or false-->
if true--> it show the menu throw toggleMenu ---> toggleMenu is a function that toggles the value of show when called. It uses setShow to update the state of show to its opposite value (!show). This means if show is false, it becomes true, and vice versa.
----this function returns a page-->withnavbar classname	-->Hamburger icon --three horizontal lines-->When clicked, it triggers the toggleMenu function to toggle the visibility of the menu.

----<div className={show ? 'navLinks showmenu' : 'navLinks'} style={styles.navLinks}>--> show is true, the class showmenu is added to display the links (<Link> components for Home, Patients, Appointments, and Login)
                                                                                                                                                                 --->show is false, only the basic structure (<div className="navLinks"> without showmenu) is shown.
*******lOGIN page**********
1.import userstate---> to make interactive and responsive webssites
2.import lik from react router dom --> to transfrom from one page to another in one click
3.const lofin function: Using the useState hook to create state variables email, password, and confirmpassword along with their corresponding setter functions (setEmail, setPassword, and setConfirmPassword
4. returns: web page which takes inputs.
5. Exporting the Login component as the default export, making it available for import in other parts of the application.


